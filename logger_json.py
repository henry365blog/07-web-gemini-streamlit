import os
import json
from datetime import datetime

# üìÇ Th∆∞ m·ª•c l∆∞u l·ªãch s·ª≠
HISTORY_DIR = "history"

def save_history_json(prompt, result, temperature, username="unknown"):
    """L∆∞u prompt v√† k·∫øt qu·∫£ v√†o file JSON theo t·ª´ng user, t·ª´ng ng√†y."""

    if not prompt or not result:
        # N·∫øu thi·∫øu prompt ho·∫∑c kh√¥ng c√≥ k·∫øt qu·∫£ th√¨ kh√¥ng l∆∞u
        return

    today = datetime.now().strftime("%Y-%m-%d")
    timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")

    user_dir = os.path.join(HISTORY_DIR, username)
    os.makedirs(user_dir, exist_ok=True)

    file_path = os.path.join(user_dir, f"{today}.json")

    # ƒê·ªçc d·ªØ li·ªáu c≈© (n·∫øu c√≥)
    if os.path.exists(file_path):
        try:
            with open(file_path, "r", encoding="utf-8") as f:
                data = json.load(f)
        except json.JSONDecodeError:
            # N·∫øu file b·ªã l·ªói format, reset file
            data = []
    else:
        data = []

    # Th√™m b·∫£n ghi m·ªõi
    entry = {
        "timestamp": timestamp,
        "prompt": prompt,
        "result": result,
        "temperature": temperature,
    }
    data.append(entry)

    # Ghi l·∫°i v√†o file
    with open(file_path, "w", encoding="utf-8") as f:
        json.dump(data, f, indent=4, ensure_ascii=False)

def read_history_json(username, date_str):
    """ƒê·ªçc l·ªãch s·ª≠ theo user v√† ng√†y."""

    file_path = os.path.join(HISTORY_DIR, username, f"{date_str}.json")

    if not os.path.exists(file_path):
        return []  # Kh√¥ng c√≥ file th√¨ tr·∫£ v·ªÅ list tr·ªëng

    try:
        with open(file_path, "r", encoding="utf-8") as f:
            data = json.load(f)
            return data
    except json.JSONDecodeError:
        return []  # File l·ªói th√¨ tr·∫£ v·ªÅ list tr·ªëng
